<div>
  <.flash kind={:error} title="Error!" flash={@flash} />

  <p id="toggle-import-link" class="-mb-6 text-right">
    <.brand_link phx-click={toggle_import()}>Import from Audnexus</.brand_link>
  </p>

  <div
    id="import-form"
    class="mb-4 hidden rounded-md border border-zinc-300 bg-zinc-50 p-4 dark:border-zinc-600 dark:bg-zinc-900"
  >
    <.simple_form for={@audnexus_form} phx-submit="import-author" phx-target={@myself}>
      <div class="flex items-end">
        <.input
          field={@audnexus_form[:query]}
          label="Import Author from Audnexus"
          placeholder="Search by name"
          container_class="mr-2 grow"
        />
        <.button class="flex-none">Import</.button>
      </div>
    </.simple_form>

    <.note class="mt-2">
      This only works for authors, not narrators. This will overwrite all values in the form.
    </.note>

    <p class="mt-2">
      <.link phx-click={toggle_import()} class="text-red-600 dark:text-red-500">Close</.link>
    </p>
  </div>

  <.simple_form for={@form} phx-change="validate" phx-submit="save" phx-target={@myself} autocomplete="off">
    <.input field={@form[:name]} label="Name" />
    <.input
      field={@form[:description]}
      label="Description"
      type="textarea"
      phx-hook="maintain-attrs"
      data-attrs="style"
    />

    <div>
      <.label>Writing as</.label>
      <.inputs_for :let={author_form} field={@form[:authors]}>
        <div class="flex">
          <.input field={author_form[:name]} placeholder="Name" container_class="grow" />
          <.delete_checkbox field={author_form[:delete]} class="ml-2" />
        </div>
      </.inputs_for>
      <.brand_link phx-click="add-author" phx-target={@myself} class="flex items-center pt-2">
        <span>Add author</span>
        <FA.icon name="plus" class="ml-1 h-4 w-4 fill-current" />
      </.brand_link>
    </div>

    <div>
      <.label>Narrating as</.label>
      <.inputs_for :let={narrator_form} field={@form[:narrators]}>
        <div class="flex">
          <.input field={narrator_form[:name]} placeholder="Name" container_class="grow" />
          <.delete_checkbox field={narrator_form[:delete]} class="ml-2" />
        </div>
      </.inputs_for>
      <.brand_link phx-click="add-narrator" phx-target={@myself} class="flex items-center pt-2">
        <span>Add narrator</span>
        <FA.icon name="plus" class="ml-1 h-4 w-4 fill-current" />
      </.brand_link>
    </div>

    <div :if={@person.image_path}>
      <.label>Current image</.label>
      <img src={@person.image_path} class="mt-2 h-40 w-40 rounded-full object-cover object-top shadow-lg" />
    </div>

    <.input field={@form[:image_import_url]} label="Import image from URL" />

    <div :if={valid_image_url?(@form[:image_import_url].value)}>
      <.label>Import image preview</.label>
      <img src={@form[:image_import_url].value} class="mt-2 h-40 w-40 rounded-full object-cover object-top shadow-lg" />
    </div>

    <div>
      <.label>Upload image</.label>

      <section
        class="border-brand mt-2 w-full space-y-4 rounded-lg border-2 border-dashed p-4 dark:border-brand-dark"
        phx-drop-target={@uploads.image.ref}
      >
        <.live_file_input upload={@uploads.image} />
        <article :for={entry <- @uploads.image.entries} class="upload-entry">
          <figure>
            <.live_img_preview entry={entry} class="h-40 w-40 rounded-full object-cover object-top shadow-lg" />
            <figcaption><%= entry.client_name %></figcaption>
          </figure>

          <progress value={entry.progress} max="100"><%= entry.progress %>%</progress>

          <span
            class="cursor-pointer text-2xl transition-colors hover:text-red-600 dark:hover:text-red-500"
            phx-click="cancel-upload"
            phx-value-ref={entry.ref}
            phx-target={@myself}
          >
            &times;
          </span>

          <p :for={err <- upload_errors(@uploads.image, entry)} class="text-red-600 dark:text-red-500">
            <%= error_to_string(err) %>
          </p>
        </article>
        <p :for={err <- upload_errors(@uploads.image)} class="text-red-600 dark:text-red-500">
          <%= error_to_string(err) %>
        </p>
      </section>
    </div>

    <:actions>
      <.button>Save</.button>
    </:actions>
  </.simple_form>
</div>
