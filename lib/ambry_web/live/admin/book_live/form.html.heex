<.modal :if={@import} id="import-modal" show on_cancel={JS.push("cancel-import")}>
  <.live_component id="import-form" module={import_form(@import.type)} query={@import.query} book={@book} />
</.modal>

<.datalist id="authors" options={@authors} />
<.datalist id="series" options={@series} />

<div class="max-w-3xl">
  <.simple_form for={@form} phx-change="validate" phx-submit="submit" autocomplete="off">
    <div class="space-y-2">
      <.label for={@form[:title].id}>Title</.label>
      <div class="flex items-center gap-2">
        <.input field={@form[:title]} show_errors={false} container_class="grow" />
        <.label>Import from:</.label>
        <.button color={:zinc} class="flex items-center gap-1" name="import" value="goodreads">
          <FA.icon name="goodreads" type="brands" class="h-4 w-4 fill-current" /> GoodReads
        </.button>
        <.button color={:zinc} class="flex items-center gap-1" name="import" value="audible">
          <FA.icon name="audible" type="brands" class="h-4 w-4 fill-current" /> Audible
        </.button>
      </div>
      <.field_errors field={@form[:title]} />
    </div>

    <div class="space-y-2">
      <.label for={@form[:published].id}>First published</.label>

      <.note>
        This is meant to be print publication date, not audiobook recording date.
      </.note>

      <div class="flex flex-row items-center gap-2">
        <.input field={@form[:published]} type="date" show_errors={false} container_class="flex-grow" />
        <.label for={@form[:published_format].id}>Display format</.label>
        <.input
          field={@form[:published_format]}
          type="select"
          container_class="flex-grow"
          options={[{"Full Date", "full"}, {"Year & Month", "year_month"}, {"Year Only", "year"}]}
        />
      </div>

      <.field_errors field={@form[:published]} />
    </div>

    <div class="flex gap-2">
      <.input
        id="description-input"
        field={@form[:description]}
        label="Description"
        type="textarea"
        phx-hook="maintain-attrs"
        data-attrs="style"
        container_class="w-1/2"
      />
      <div class="relative w-1/2 flex-1">
        <div
          id="description-preview"
          phx-hook="scroll-match"
          data-target="description-input"
          class="absolute top-8 right-0 bottom-0 left-0 overflow-auto rounded-sm border border-zinc-300 dark:border-zinc-800"
        >
          <.markdown content={@form[:description].value || ""} class="p-2" />
        </div>
      </div>
    </div>

    <div class="space-y-2">
      <.label>Authors</.label>
      <.inputs_for :let={book_author_form} field={@form[:book_authors]}>
        <.sort_input parent_form={@form} form={book_author_form} sort_param={:book_authors_sort} />

        <div class="flex items-start gap-2">
          <.input
            field={book_author_form[:author_id]}
            type="autocomplete"
            options={@authors}
            list="authors"
            container_class="grow"
          />
          <.delete_button parent_form={@form} form={book_author_form} drop_param={:book_authors_drop} class="pt-[10px]" />
        </div>
      </.inputs_for>

      <.add_button form={@form} sort_param={:book_authors_sort} label="Add author" />
    </div>

    <div class="space-y-2">
      <.label>Series</.label>
      <.inputs_for :let={series_book_form} field={@form[:series_books]}>
        <.sort_input parent_form={@form} form={series_book_form} sort_param={:series_books_sort} />

        <div class="flex items-start gap-2">
          <.input
            field={series_book_form[:series_type]}
            type="select"
            options={[{"Existing", "existing"}, {"New", "new"}]}
            container_class="w-24"
          />
          <.input
            field={series_book_form[:book_number]}
            placeholder="no."
            container_class="w-14 flex-none"
            show_errors={false}
          />
          <.input
            :if={series_book_form[:series_type].value == "existing" || is_nil(series_book_form[:series_type].value)}
            field={series_book_form[:series_id]}
            type="autocomplete"
            options={@series}
            list="series"
            container_class="grow"
          />
          <div :if={series_book_form[:series_type].value == "new"} class="grow">
            <.inputs_for :let={series_form} field={series_book_form[:series]}>
              <.input field={series_form[:name]} />
            </.inputs_for>
          </div>
          <.delete_button parent_form={@form} form={series_book_form} drop_param={:series_books_drop} class="pt-[10px]" />
        </div>
      </.inputs_for>

      <.add_button form={@form} sort_param={:series_books_sort} label="Add series" />
    </div>

    <div :if={@book.image_path} class="space-y-2">
      <.label>Current image</.label>
      <.image_with_size id={"image-#{@book.id}"} src={@book.image_path} class="h-48 w-48 rounded-sm" />
    </div>

    <.input
      type="select"
      label={if @live_action == :new || is_nil(@book.image_path), do: "Image", else: "Replace image"}
      field={@form[:image_type]}
      prompt=""
      options={[
        {"Upload file", "upload"},
        {"Import image from URL", "url_import"}
      ]}
    />

    <.file_input
      :if={@form[:image_type].value == "upload"}
      upload={@uploads.image}
      label="Upload image"
      image_preview_class="h-48 w-48 rounded-sm"
    />

    <.image_import_input
      :if={@form[:image_type].value == "url_import"}
      field={@form[:image_import_url]}
      label="Import image from URL"
      image_preview_class="h-48 w-48 rounded-sm"
    />

    <:actions>
      <.button>Save</.button>
    </:actions>
  </.simple_form>
</div>
