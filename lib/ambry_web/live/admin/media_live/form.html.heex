<.layout title={@page_title} user={@current_user}>
  <.modal :if={@import} id="import-modal" show on_cancel={JS.push("cancel-import")}>
    <.live_component id="import-form" module={import_form(@import.type)} query={@import.query} media={@media} />
  </.modal>

  <.modal :if={@select_files} id="select-files-modal" show on_cancel={JS.push("cancel-select-files")}>
    <.live_component id="file-browser" module={FileBrowser} root_path={Application.get_env(:ambry, :source_path)} />
  </.modal>

  <.datalist id="narrators" options={@narrators} />
  <.datalist id="books" options={@books} />

  <div class="max-w-3xl">
    <.simple_form for={@form} phx-change="validate" phx-submit="submit" autocomplete="off">
      <div class="space-y-2">
        <.label for={@form[:book_id].id}>Book</.label>
        <div class="flex items-center gap-2">
          <.input
            field={@form[:book_id]}
            type="autocomplete"
            options={@books}
            list="books"
            show_errors={false}
            container_class="grow"
          />
          <.label>Import from:</.label>
          <.button
            :if={@scraping_available}
            color={:zinc}
            class="flex items-center gap-1"
            type="button"
            phx-click={open_import_form("goodreads")}
          >
            <FA.icon name="goodreads" type="brands" class="h-4 w-4 fill-current" /> GoodReads
          </.button>
          <.button color={:zinc} class="flex items-center gap-1" type="button" phx-click={open_import_form("audible")}>
            <FA.icon name="audible" type="brands" class="h-4 w-4 fill-current" /> Audible
          </.button>
        </div>
        <.field_errors field={@form[:book_id]} />
      </div>

      <div class="space-y-2">
        <.label for={@form[:published].id}>Published</.label>

        <.note>
          This is meant to be audiobook recording date, not print publication date.
        </.note>

        <div class="flex flex-row items-center gap-2">
          <.input field={@form[:published]} type="date" container_class="grow" />
          <.label for={@form[:published_format].id}>Display format</.label>
          <.input
            field={@form[:published_format]}
            type="select"
            container_class="grow"
            options={[{"Full Date", "full"}, {"Year & Month", "year_month"}, {"Year Only", "year"}]}
          />
        </div>
      </div>

      <div class="space-y-2">
        <.label>Narrated by</.label>
        <.inputs_for :let={media_narrator_form} field={@form[:media_narrators]}>
          <.sort_input field={@form[:media_narrators_sort]} index={media_narrator_form.index} />

          <div class="flex items-start gap-2">
            <.input
              field={media_narrator_form[:narrator_id]}
              type="autocomplete"
              options={@narrators}
              list="narrators"
              container_class="grow"
            />
            <.delete_button field={@form[:media_narrators_drop]} index={media_narrator_form.index} class="pt-[10px]" />
          </div>
        </.inputs_for>

        <.add_button field={@form[:media_narrators_sort]}>Add narrator</.add_button>
        <.delete_input field={@form[:media_narrators_drop]} />
      </div>

      <div class="flex gap-4">
        <.input field={@form[:abridged]} label="Abridged" type="checkbox" />
        <.input field={@form[:full_cast]} label="Full cast" type="checkbox" />
      </div>

      <.input
        field={@form[:notes]}
        label="Notes"
        type="textarea"
        phx-hook="maintain-attrs"
        data-attrs="style"
        class="!min-h-24"
      />

      <div class="space-y-2">
        <.label>Existing source files</.label>
        <div class="max-h-64 overflow-x-auto rounded-sm border-2 border-dashed border-zinc-600 bg-zinc-950 p-4">
          <p :for={file <- @media.source_files} class="text-sm italic">
            <%= Path.basename(file) %>
          </p>
        </div>
      </div>

      <.input
        type="select"
        label="Audio source type"
        field={@form[:source_type]}
        options={[
          {"Upload from your file-system", "upload"},
          {"Import from server file-system", "local_import"}
        ]}
      />

      <div :if={@form[:source_type].value == "upload"} class="space-y-2">
        <%= if @live_action == :new do %>
          <.label>Upload audio</.label>
        <% else %>
          <.label>Upload additional audio</.label>

          <.note>
            Adding additional files does not replace any existing files. Re-run the processor after adding new files to replace the streamable output files.
          </.note>
        <% end %>

        <.note>
          <:label>Supported formats</:label>
          mp3, mp4, m4a, m4b, opus
        </.note>

        <.file_input upload={@uploads.audio} />
        <.field_errors field={@form[:source_path]} />
      </div>

      <div :if={@form[:source_type].value == "local_import"} class="space-y-2">
        <%= if @live_action == :new do %>
          <.label>Import audio</.label>
        <% else %>
          <.label>Import additional audio</.label>

          <.note>
            Adding additional files does not replace any existing files. Re-run the processor after adding new files to replace the streamable output files.
          </.note>
        <% end %>

        <.note>
          <:label>Supported formats</:label>
          mp3, mp4, m4a, m4b, opus
        </.note>

        <div>
          <div class="flex items-center rounded-sm rounded-b-none border border-zinc-300 bg-white text-zinc-900 dark:border-zinc-600 dark:bg-zinc-800 dark:text-zinc-300 sm:text-sm sm:leading-6">
            <button
              class="py-[7px] px-[11px] bg-zinc-600 font-bold text-zinc-100 hover:bg-zinc-500"
              type="button"
              phx-click="open-file-browser"
            >
              Browse...
            </button>
            <p class="overflow-hidden text-ellipsis whitespace-nowrap px-2">
              <%= Enum.count(@selected_files) %> File(s) selected
            </p>
          </div>
          <div class="max-h-64 space-y-4 overflow-x-auto rounded-b-sm border-2 border-t-0 border-dashed border-zinc-600 bg-zinc-950 p-4">
            <FA.icon
              :if={Enum.empty?(@selected_files)}
              name="file-circle-exclamation"
              class="mx-auto my-4 block h-8 w-8 fill-current"
            />
            <p :for={file <- Enum.sort(@selected_files, NaturalOrder)}>
              <%= Path.basename(file) %>
            </p>
          </div>
        </div>
      </div>

      <div :if={@file_stats}>
        <div class="flex items-center gap-2">
          <.label>Audio files</.label>
          <button
            type="button"
            class="flex grow items-center text-lime-500 hover:underline"
            phx-click={JS.toggle(to: ".files-list-toggle")}
          >
            <span class="files-list-toggle">show</span>
            <span class="files-list-toggle hidden">hide</span>
            <FA.icon name="chevron-down" class="files-list-toggle ml-1 h-4 w-4 fill-current" />
            <FA.icon name="chevron-up" class="files-list-toggle ml-1 hidden h-4 w-4 fill-current" />
          </button>
        </div>

        <div class="files-list-toggle mt-2 hidden rounded-sm border border-zinc-200 bg-zinc-50 p-4 shadow-lg dark:border-zinc-800 dark:bg-zinc-900">
          <div class="space-y-2 divide-y divide-zinc-200 dark:divide-zinc-800">
            <.file_stat_row label="mp4" file={@file_stats.mp4_file} />
            <.file_stat_row label="mpd" file={@file_stats.mpd_file} />
            <.file_stat_row label="hls" file={@file_stats.hls_master} />
            <.file_stat_row label="hls_0" file={@file_stats.hls_playlist} />

            <%= case @file_stats.source_files do %>
              <% error when is_atom(error) -> %>
                <.file_stat_row
                  class="source-list-toggle hidden"
                  label="source"
                  file={%{path: @media.source_path, stat: error}}
                  error_type={:warn}
                />
              <% source_files when is_list(source_files) -> %>
                <.file_stat_row
                  :if={source_files == []}
                  class="source-list-toggle hidden"
                  label="source"
                  file={%{path: @media.source_path, stat: :empty}}
                  error_type={:warn}
                />
                <.file_stat_row
                  :for={source_file <- source_files}
                  class="source-list-toggle hidden"
                  label="source"
                  file={source_file}
                  error_type={:warn}
                />
            <% end %>
            <div>
              <button
                type="button"
                class="flex items-center pt-2 text-lime-500 hover:underline"
                phx-click={JS.toggle(to: ".source-list-toggle")}
              >
                <span class="source-list-toggle">show source files</span>
                <span class="source-list-toggle hidden">hide source files</span>
                <FA.icon name="chevron-down" class="source-list-toggle ml-1 h-4 w-4 fill-current" />
                <FA.icon name="chevron-up" class="source-list-toggle ml-1 hidden h-4 w-4 fill-current" />
              </button>
            </div>
          </div>
        </div>
      </div>

      <.file_input upload={@uploads.supplemental} label="Upload supplemental files" image_preview_class="h-48" />

      <div :if={@live_action == :edit && @form[:supplemental_files].value != []} class="space-y-2">
        <.label>Supplemental files</.label>

        <.inputs_for :let={supplemental_file_form} field={@form[:supplemental_files]}>
          <.sort_input field={@form[:supplemental_files_sort]} index={supplemental_file_form.index} />
          <.input field={supplemental_file_form[:id]} type="hidden" />

          <div class="flex items-center gap-2">
            <.label for={supplemental_file_form[:label].name}>Label</.label>
            <.input field={supplemental_file_form[:label]} placeholder="Label" container_class="grow" />
            <.label for={supplemental_file_form[:filename].name}>Filename</.label>
            <.input field={supplemental_file_form[:filename]} placeholder="filename.ext" container_class="grow" />
            <.delete_button field={@form[:supplemental_files_drop]} index={supplemental_file_form.index} />
          </div>
        </.inputs_for>

        <.delete_input field={@form[:supplemental_files_drop]} />
      </div>

      <div class="space-y-2">
        <.label for={@form[:processor].name}>
          <%= if @live_action == :new, do: "Processor", else: "Re-run processor?" %>
        </.label>

        <.note :if={@live_action == :edit}>
          This will re-process the source files and replace the streamable output files.
        </.note>

        <.input
          type="select"
          field={@form[:processor]}
          prompt={if @live_action == :new, do: "auto-select", else: "no"}
          options={processors(@media, @uploads.audio.entries)}
        />
      </div>

      <:actions>
        <.button>Save</.button>
      </:actions>
    </.simple_form>
  </div>
</.layout>
