<div>
  <h2 class="text-3xl pb-4">{@title}</h2>

  <Form for={@changeset} change="validate" submit="save" opts={autocomplete: "off"}>
    <div class="space-y-4">
      <Field name={:book_id}>
        <Label class="font-semibold" />
        <div>
          <Select
            prompt=""
            options={@books}
            class="border-2 rounded px-3 py-2 w-full focus:outline-none focus:border-lime-400 focus:shadow"
          />
        </div>
        <div class="text-red-600"><ErrorTag /></div>
      </Field>

      <div>
        <Label class="font-semibold" text="Narrated by" />
        <div class="space-y-2">
          <Inputs for={:media_narrators}>
            <HiddenInputs for={:media_narrator} />
            <div class="flex items-center">
              <Field name={:narrator_id} class="w-full">
                <Select
                  prompt=""
                  options={@narrators}
                  class="border-2 rounded px-3 py-2 w-full focus:outline-none focus:border-lime-400 focus:shadow"
                />
              </Field>
              <Field name={:delete}>
                <Label text="" class="ml-2 flex">
                  <Checkbox hidden_input={false} class="peer appearance-none" />
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="peer-checked:text-red-600 hover:text-red-600 transition-colors cursor-pointer h-5 w-5"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </Label>
              </Field>
            </div>
            <div class="text-red-600"><ErrorTag field={:narrator_id} /></div>
          </Inputs>
        </div>
        <a href="#" :on-click="add-narrator" class="pt-2 text-lime-500 hover:underline flex items-center">
          <span>Add narrator</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z"
              clip-rule="evenodd"
            />
          </svg>
        </a>
      </div>

      <Field name={:abridged}>
        <Checkbox class="mr-2" />
        <Label class="font-semibold" />
      </Field>

      <Field name={:full_cast}>
        <Checkbox class="mr-2" />
        <Label class="font-semibold" />
      </Field>

      {#if @action == :new}
        <div>
          <Label class="font-semibold">Upload audio</Label>

          <section
            class="space-y-4 p-4 w-full border-2 rounded-lg border-dashed border-lime-400"
            phx-drop-target={@uploads.audio.ref}
          >
            <LiveFileInput upload={@uploads.audio} />
            {#for entry <- @uploads.audio.entries}
              <article class="upload-entry">
                <figure>
                  <figcaption>{entry.client_name}</figcaption>
                </figure>

                <progress value={entry.progress} max="100">{entry.progress}%</progress>

                <span
                  class="text-2xl cursor-pointer hover:text-red-600 transition-colors"
                  :on-click="cancel-upload"
                  :values={ref: entry.ref}
                >&times;</span>

                {#for err <- upload_errors(@uploads.audio, entry)}
                  <p class="text-red-600">{error_to_string(err)}</p>
                {/for}
              </article>
            {/for}
          </section>
          <div class="text-red-600"><ErrorTag field={:source_path} /></div>
        </div>
      {/if}

      {#case assigns[:file_stats]}
        {#match nil}
          <!-- nothing here -->
        {#match files}
          <div class="my-4 p-4 bg-white rounded-lg shadow-lg border border-gray-200">
            <div class="space-y-2 divide-y divide-gray-200">
              <div class="p-2 flex">
                <div class="pr-2 w-28">
                  <span class="px-1 border border-gray-200 rounded-md bg-gray-50">mp4</span>
                </div>
                {#if files.mp4_file}
                  <div class="flex-grow">
                    {files.mp4_file.path}
                  </div>
                  <div class="flex-shrink">
                    {#case files.mp4_file.stat}
                      {#match error when is_atom(error)}
                        <span class="px-1 border border-red-200 rounded-md bg-red-50">{error}</span>
                      {#match stat when is_map(stat)}
                        <span class="px-1 border border-blue-200 rounded-md bg-blue-50 whitespace-nowrap">{format_filesize(stat.size)}</span>
                    {/case}
                  </div>
                {#else}
                  <div class="flex-grow" />
                  <div class="flex-shrink">
                    <span class="px-1 border border-red-200 rounded-md bg-red-50">nil</span>
                  </div>
                {/if}
              </div>

              <div class="p-2 flex">
                <div class="pr-2 w-28">
                  <span class="px-1 border border-gray-200 rounded-md bg-gray-50">mpd</span>
                </div>
                {#if files.mpd_file}
                  <div class="flex-grow">
                    {files.mpd_file.path}
                  </div>
                  <div class="flex-shrink">
                    {#case files.mpd_file.stat}
                      {#match error when is_atom(error)}
                        <span class="px-1 border border-red-200 rounded-md bg-red-50">{error}</span>
                      {#match stat when is_map(stat)}
                        <span class="px-1 border border-blue-200 rounded-md bg-blue-50 whitespace-nowrap">{format_filesize(stat.size)}</span>
                    {/case}
                  </div>
                {#else}
                  <div class="flex-grow" />
                  <div class="flex-shrink">
                    <span class="px-1 border border-red-200 rounded-md bg-red-50">nil</span>
                  </div>
                {/if}
              </div>

              {#case files.source_files}
                {#match error when is_atom(error)}
                  <div class="p-2 flex">
                    <div class="pr-2 w-28">
                      <span class="px-1 border border-gray-200 rounded-md bg-gray-50">source</span>
                    </div>
                    <div class="flex-grow">
                      {@media.source_path}
                    </div>
                    <div class="flex-shrink">
                      <span class="px-1 border border-yellow-200 rounded-md bg-yellow-50">{error}</span>
                    </div>
                  </div>
                {#match source_files when is_list(source_files)}
                  {#if source_files == []}
                    <div class="p-2 flex">
                      <div class="pr-2 w-28">
                        <span class="px-1 border border-gray-200 rounded-md bg-gray-50">source</span>
                      </div>
                      <div class="flex-grow">
                        {@media.source_path}
                      </div>
                      <div class="flex-shrink">
                        <span class="px-1 border border-yellow-200 rounded-md bg-yellow-50">empty</span>
                      </div>
                    </div>
                  {/if}
                  {#for source_file <- source_files}
                    <div class="p-2 flex">
                      <div class="pr-2 w-28">
                        <span class="px-1 border border-gray-200 rounded-md bg-gray-50">source</span>
                      </div>
                      <div class="flex-grow">
                        {source_file.path}
                      </div>
                      <div class="flex-shrink">
                        {#case source_file.stat}
                          {#match error when is_atom(error)}
                            <span class="px-1 border border-yellow-200 rounded-md bg-yellow-50">{error}</span>
                          {#match stat when is_map(stat)}
                            <span class="px-1 border border-blue-200 rounded-md bg-blue-50 whitespace-nowrap">{format_filesize(stat.size)}</span>
                        {/case}
                      </div>
                    </div>
                  {/for}
              {/case}
            </div>
          </div>
      {/case}

      <div class="-m-6 bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <SaveButton />
      </div>
    </div>
  </Form>
</div>
